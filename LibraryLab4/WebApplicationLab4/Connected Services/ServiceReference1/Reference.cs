//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplicationLab4.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IObjectsService")]
    public interface IObjectsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/AddBook", ReplyAction="http://tempuri.org/IObjectsService/AddBookResponse")]
        int AddBook(ObjectsManager.Model.Book books);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/AddBook", ReplyAction="http://tempuri.org/IObjectsService/AddBookResponse")]
        System.Threading.Tasks.Task<int> AddBookAsync(ObjectsManager.Model.Book books);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/GetBook", ReplyAction="http://tempuri.org/IObjectsService/GetBookResponse")]
        ObjectsManager.Model.Book GetBook(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/GetBook", ReplyAction="http://tempuri.org/IObjectsService/GetBookResponse")]
        System.Threading.Tasks.Task<ObjectsManager.Model.Book> GetBookAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/GetAllBooks", ReplyAction="http://tempuri.org/IObjectsService/GetAllBooksResponse")]
        ObjectsManager.Model.Book[] GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/GetAllBooks", ReplyAction="http://tempuri.org/IObjectsService/GetAllBooksResponse")]
        System.Threading.Tasks.Task<ObjectsManager.Model.Book[]> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/UpdateBook", ReplyAction="http://tempuri.org/IObjectsService/UpdateBookResponse")]
        ObjectsManager.Model.Book UpdateBook(ObjectsManager.Model.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/UpdateBook", ReplyAction="http://tempuri.org/IObjectsService/UpdateBookResponse")]
        System.Threading.Tasks.Task<ObjectsManager.Model.Book> UpdateBookAsync(ObjectsManager.Model.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/DeleteBook", ReplyAction="http://tempuri.org/IObjectsService/DeleteBookResponse")]
        bool DeleteBook(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/DeleteBook", ReplyAction="http://tempuri.org/IObjectsService/DeleteBookResponse")]
        System.Threading.Tasks.Task<bool> DeleteBookAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/AddAuthor", ReplyAction="http://tempuri.org/IObjectsService/AddAuthorResponse")]
        int AddAuthor(ObjectsManager.Model.Author author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/AddAuthor", ReplyAction="http://tempuri.org/IObjectsService/AddAuthorResponse")]
        System.Threading.Tasks.Task<int> AddAuthorAsync(ObjectsManager.Model.Author author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/GetAuthor", ReplyAction="http://tempuri.org/IObjectsService/GetAuthorResponse")]
        ObjectsManager.Model.Author GetAuthor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/GetAuthor", ReplyAction="http://tempuri.org/IObjectsService/GetAuthorResponse")]
        System.Threading.Tasks.Task<ObjectsManager.Model.Author> GetAuthorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/GetAllAuthors", ReplyAction="http://tempuri.org/IObjectsService/GetAllAuthorsResponse")]
        ObjectsManager.Model.Author[] GetAllAuthors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/GetAllAuthors", ReplyAction="http://tempuri.org/IObjectsService/GetAllAuthorsResponse")]
        System.Threading.Tasks.Task<ObjectsManager.Model.Author[]> GetAllAuthorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/UpdateAuthor", ReplyAction="http://tempuri.org/IObjectsService/UpdateAuthorResponse")]
        ObjectsManager.Model.Author UpdateAuthor(ObjectsManager.Model.Author author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectsService/UpdateAuthor", ReplyAction="http://tempuri.org/IObjectsService/UpdateAuthorResponse")]
        System.Threading.Tasks.Task<ObjectsManager.Model.Author> UpdateAuthorAsync(ObjectsManager.Model.Author author);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IObjectsServiceChannel : WebApplicationLab4.ServiceReference1.IObjectsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObjectsServiceClient : System.ServiceModel.ClientBase<WebApplicationLab4.ServiceReference1.IObjectsService>, WebApplicationLab4.ServiceReference1.IObjectsService {
        
        public ObjectsServiceClient() {
        }
        
        public ObjectsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ObjectsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ObjectsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ObjectsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddBook(ObjectsManager.Model.Book books) {
            return base.Channel.AddBook(books);
        }
        
        public System.Threading.Tasks.Task<int> AddBookAsync(ObjectsManager.Model.Book books) {
            return base.Channel.AddBookAsync(books);
        }
        
        public ObjectsManager.Model.Book GetBook(int id) {
            return base.Channel.GetBook(id);
        }
        
        public System.Threading.Tasks.Task<ObjectsManager.Model.Book> GetBookAsync(int id) {
            return base.Channel.GetBookAsync(id);
        }
        
        public ObjectsManager.Model.Book[] GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<ObjectsManager.Model.Book[]> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public ObjectsManager.Model.Book UpdateBook(ObjectsManager.Model.Book book) {
            return base.Channel.UpdateBook(book);
        }
        
        public System.Threading.Tasks.Task<ObjectsManager.Model.Book> UpdateBookAsync(ObjectsManager.Model.Book book) {
            return base.Channel.UpdateBookAsync(book);
        }
        
        public bool DeleteBook(int id) {
            return base.Channel.DeleteBook(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBookAsync(int id) {
            return base.Channel.DeleteBookAsync(id);
        }
        
        public int AddAuthor(ObjectsManager.Model.Author author) {
            return base.Channel.AddAuthor(author);
        }
        
        public System.Threading.Tasks.Task<int> AddAuthorAsync(ObjectsManager.Model.Author author) {
            return base.Channel.AddAuthorAsync(author);
        }
        
        public ObjectsManager.Model.Author GetAuthor(int id) {
            return base.Channel.GetAuthor(id);
        }
        
        public System.Threading.Tasks.Task<ObjectsManager.Model.Author> GetAuthorAsync(int id) {
            return base.Channel.GetAuthorAsync(id);
        }
        
        public ObjectsManager.Model.Author[] GetAllAuthors() {
            return base.Channel.GetAllAuthors();
        }
        
        public System.Threading.Tasks.Task<ObjectsManager.Model.Author[]> GetAllAuthorsAsync() {
            return base.Channel.GetAllAuthorsAsync();
        }
        
        public ObjectsManager.Model.Author UpdateAuthor(ObjectsManager.Model.Author author) {
            return base.Channel.UpdateAuthor(author);
        }
        
        public System.Threading.Tasks.Task<ObjectsManager.Model.Author> UpdateAuthorAsync(ObjectsManager.Model.Author author) {
            return base.Channel.UpdateAuthorAsync(author);
        }
    }
}
